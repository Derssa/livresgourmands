@startuml
' ===============================
' HORIZONTAL CLASS DIAGRAM - Online Bookstore with Methods
' ===============================

left to right direction

' ========= ENUMS ==========
enum Role {
  CLIENT
  ADMIN
  EDITOR
  MANAGER
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
}

enum EbookSource {
  PURCHASE
  GIFT
}

' ========= CLASSES ==========

class User {
  +id : int
  +email : string
  +password_hash : string
  +first_name : string
  +last_name : string
  +role : Role
  +created_at : timestamp

  +findByEmail(email)
  +findById(id)
  +createUser(data)
  +listUsers()
  +updateUser(id, fields)
  +deleteUser(id)
}

class Category {
  +id : int
  +name : string
  +description : text

  +listCategories()
  +createCategory(data)
  +updateCategory(id, data)
  +deleteCategory(id)
}

class Book {
  +id : int
  +title : string
  +author : string
  +isbn : string
  +price : decimal
  +stock : int
  +description : text
  +category_id : int
  +coverImage : string
  +fileUrl : string
  +publishedDate : date

  +listBooks()
  +getBook(id)
  +createBook(data)
  +updateBook(id, data)
  +deleteBook(id)
}

class Order {
  +id : int
  +user_id : int
  +total : decimal
  +status : OrderStatus
  +payment_mode : string
  +is_gift : boolean
  +gift_recipient_name : string
  +gift_recipient_email : string
  +gift_message : text
  +created_at : timestamp

  +listOrdersByUser(userId)
  +createOrder(data)
}

class OrderItem {
  +id : int
  +order_id : int
  +book_id : int
  +quantity : int
  +price_each : decimal
}

class GiftList {
  +id : int
  +user_id : int
  +title : string
  +description : text
  +share_code : string
  +is_active : boolean
  +created_at : timestamp

  +createGiftList(data)
  +getGiftListByCode(shareCode)
  +getGiftListItems(giftListId)
  +addItemToGiftList(data)
  +removeItemFromGiftList(giftListId, bookId)
  +getUserGiftLists(userId)
  +recordGiftPurchase(data)
}

class GiftListItem {
  +id : int
  +gift_list_id : int
  +book_id : int
  +quantity : int
  +created_at : timestamp
}

class GiftPurchase {
  +id : int
  +gift_list_id : int
  +buyer_user_id : int
  +book_id : int
  +quantity : int
  +purchased_at : timestamp
}

class GiftRedemption {
  +id : int
  +order_id : int
  +book_id : int
  +recipient_email : string
  +token : string
  +redeemed_by_user_id : int
  +redeemed_at : timestamp
  +created_at : timestamp

  +createRedemption(data)
  +redeemToken(data)
  +listMyLibrary(userId)
}

class Review {
  +id : int
  +user_id : int
  +book_id : int
  +rating : tinyint
  +created_at : timestamp

  +userPurchasedBook(userId, bookId)
  +addReview(data)
  +addComment(data)
  +listComments(bookId)
  +validateComment(id, validated)
}

class Comment {
  +id : int
  +user_id : int
  +book_id : int
  +content : text
  +validated : boolean
  +created_at : timestamp
}

class UserEbook {
  +id : int
  +user_id : int
  +book_id : int
  +source : EbookSource
  +created_at : timestamp
}

' ========= RELATIONSHIPS ==========

User "1" -- "many" Order : places >
Order "1" -- "many" OrderItem : contains >
OrderItem "many" -- "1" Book : references >

User "1" -- "many" GiftList : owns >
GiftList "1" -- "many" GiftListItem : includes >
GiftListItem "many" -- "1" Book : references >

GiftList "1" -- "many" GiftPurchase : has >
GiftPurchase "many" -- "1" User : buyer >
GiftPurchase "many" -- "1" Book : item >

User "1" -- "many" Review : writes >
Review "many" -- "1" Book : reviews >

User "1" -- "many" Comment : posts >
Comment "many" -- "1" Book : comments >

User "1" -- "many" UserEbook : owns >
UserEbook "many" -- "1" Book : represents >

Order "1" -- "many" GiftRedemption : generates >
GiftRedemption "many" -- "1" Book : gift >
GiftRedemption "many" -- "0..1" User : redeemed_by >

Category "1" -- "many" Book : classifies >

@enduml
